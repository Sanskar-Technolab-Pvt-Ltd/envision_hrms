[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"birthday-list\">\n    <!-- Upcoming birthdays will be populated here by JavaScript -->\n</div>\n",
  "modified": "2024-11-29 15:24:41.198507",
  "name": "Upcoming Birthdays",
  "private": 0,
  "roles": [
   {
    "parent": "Upcoming Birthdays",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "All"
   }
  ],
  "script": "frappe.call({\n    method: \"envision_hrms.envision_hrms.custom_py.custom_html_block.get_upcoming_birthdays\",\n    callback: function(response) {\n        const birthdays = response.message || [];\n\n        // Function to get month and day for comparison\n        const getMonthDay = (dateString) => {\n            const date = new Date(dateString);\n            return { month: date.getMonth(), day: date.getDate() };\n        };\n\n        // Sort birthdays by month and day, ignoring the year\n        birthdays.sort((a, b) => {\n            const { month: monthA, day: dayA } = getMonthDay(a.date_of_birth);\n            const { month: monthB, day: dayB } = getMonthDay(b.date_of_birth);\n\n            // First compare by month\n            if (monthA !== monthB) return monthA - monthB;\n            // If months are the same, compare by day\n            return dayA - dayB;\n        });\n\n        let html_content = `\n            <div class='birthday-list'>\n                <h4>Upcoming Birthdays This Week</h4>\n                <ul>\n        `;\n\n        if (birthdays.length > 0) {\n            birthdays.forEach(employee => {\n                const { employee_name, date_of_birth, image } = employee;\n                const dateObj = new Date(date_of_birth);\n                const day = dateObj.getDate();\n                const month = dateObj.toLocaleString('default', { month: 'short' });\n                \n                // Generate the first letter for alternate text\n                const firstNameInitial = employee_name.split(' ')[0].charAt(0).toUpperCase(); // Get first letter of first name\n\n                // Use a placeholder image if no image is available\n                const imageUrl = image || \"path/to/placeholder/image.jpg\"; // Provide a placeholder image path\n\n                html_content += `\n                    <li>\n                        ${image ? \n                            `<img src=\"${imageUrl}\" alt=\"${employee_name}\" style=\"width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;\">` :\n                            `<div style=\"width: 30px; height: 30px; border-radius: 50%; background-color: black; color: white; display: flex; align-items: center; justify-content: center; margin-right: 10px; font-weight: bold;\">${firstNameInitial}</div>`\n                        }\n                        <div class=\"employee-info\">\n                            <strong>${employee_name}</strong>: ${day} ${month}\n                        </div>\n                    </li>\n                `;\n            });\n        } else {\n            html_content += \"<li>No birthdays this week</li>\";\n        }\n\n        html_content += \"</ul></div>\";\n\n        // Insert content into root_element\n        let birthdayListElement = root_element.querySelector('.birthday-list');\n        \n        if (birthdayListElement) {\n            birthdayListElement.innerHTML = html_content;\n        } else {\n            root_element.innerHTML = html_content;\n        }\n\n        // Apply the 'show' class to each list item with a delay for the float effect\n        const listItems = root_element.querySelectorAll('.birthday-list li');\n        listItems.forEach((item, index) => {\n            setTimeout(() => {\n                item.classList.add('show');\n            }, index * 100);\n        });\n    }\n});\n",
  "style": ".birthday-list {\n    font-family: Arial, sans-serif;\n    color: #333;\n}\n\n.birthday-list h4 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #4dabb8; /* Dark green for the heading */\n}\n\n/* Style the list and enable scrolling */\n.birthday-list ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0; /* Reset margin */\n    max-height: 200px; /* Set max height for scrolling */\n    overflow-y: auto; /* Enable vertical scrolling */\n}\n\n.birthday-list li {\n    font-style: italic;\n    color: #555; /* Gray color for list items */\n    padding: 5px 0;\n    display: flex; /* Use flexbox for alignment */\n    align-items: center; /* Center items vertically */\n    max-width: 300px; /* Set a maximum width */\n}\n\n.birthday-list li img,\n.birthday-list li div {\n    width: 30px; /* Width of the image or initial circle */\n    height: 30px; /* Height of the image or initial circle */\n    border-radius: 50%; /* Make it circular */\n    margin-right: 10px; /* Space between image and text */\n}\n\n.birthday-list li .employee-info {\n    white-space: nowrap; /* Prevent text from wrapping */\n    text-overflow: ellipsis; /* Show ellipsis for overflow text */\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"anniversary-list\">\n    <!-- Upcoming work anniversaries will be populated here by JavaScript -->\n</div>\n",
  "modified": "2024-11-29 15:44:19.670112",
  "name": "Work Anniversary",
  "private": 0,
  "roles": [
   {
    "parent": "Work Anniversary",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "All"
   }
  ],
  "script": "frappe.call({\n    method: \"envision_hrms.envision_hrms.custom_py.custom_html_block.get_upcoming_work_anniversaries\",\n    callback: function(response) {\n        const anniversaries = response.message || [];\n\n        anniversaries.sort((a, b) => {\n            const dateA = new Date(a.date_of_joining);\n            const dateB = new Date(b.date_of_joining);\n            return dateA - dateB;\n        });\n\n        let html_content = `\n            <div class='anniversary-list'>\n                <h4>Work Anniversaries This Week</h4>\n                <ul>\n        `;\n\n        if (anniversaries.length > 0) {\n            anniversaries.forEach(employee => {\n                const { employee_name, date_of_joining, image, years_completed } = employee;\n                const dateObj = new Date(date_of_joining);\n                const day = dateObj.getDate();\n                const month = dateObj.toLocaleString('default', { month: 'short' });\n\n                const firstNameInitial = employee_name.split(' ')[0].charAt(0).toUpperCase();\n                const imageUrl = image || \"path/to/placeholder/image.jpg\";\n\n                html_content += `\n                    <li>\n                        ${image ? \n                            `<img src=\"${imageUrl}\" alt=\"${employee_name}\" style=\"width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;\">` :\n                            `<div style=\"width: 30px; height: 30px; border-radius: 50%; background-color: black; color: white; display: flex; align-items: center; justify-content: center; margin-right: 10px; font-weight: bold;\">${firstNameInitial}</div>`\n                        }\n                        <div class=\"employee-info\">\n                            <strong>${employee_name}</strong>: ${years_completed} years completed (${day} ${month})\n                        </div>\n                    </li>\n                `;\n            });\n        } else {\n            html_content += \"<li>No work anniversaries this week</li>\";\n        }\n\n        html_content += \"</ul></div>\";\n\n        let anniversaryListElement = root_element.querySelector('.anniversary-list');\n        \n        if (anniversaryListElement) {\n            anniversaryListElement.innerHTML = html_content;\n        } else {\n            root_element.innerHTML = html_content;\n        }\n\n        const listItems = root_element.querySelectorAll('.anniversary-list li');\n        listItems.forEach((item, index) => {\n            setTimeout(() => {\n                item.classList.add('show');\n            }, index * 100);\n        });\n    }\n});\n",
  "style": ".anniversary-list {\n    font-family: Arial, sans-serif;\n    color: #333;\n}\n\n.anniversary-list h4 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #4dabb8;\n}\n\n.anniversary-list ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    max-height: 200px;\n    overflow-y: auto;\n}\n\n.anniversary-list li {\n    padding: 5px 0;\n    display: flex;\n    align-items: center;\n    max-width: 300px;\n}\n\n.anniversary-list li img,\n.anniversary-list li div {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n}\n\n.anniversary-list li .employee-info {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n"
 }
]